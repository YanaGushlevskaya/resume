/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{padding:.35em .75em .625em}legend{display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}summary{display:list-item}[hidden],template{display:none}*,legend{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{width:100%;min-height:100vh}body{margin:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;font-family:Roboto,sans-serif}.content{-webkit-box-flex:1;-ms-flex:1 0;flex:1 0}.container{width:100%;margin:0 auto;padding:0 20px}@media screen and (min-width:768px){.container{width:720px}}@media screen and (min-width:992px){.container{width:940px;padding:0 15px}}@media screen and (min-width:1200px){.container{width:1170px}}.reset-list{list-style-type:none;margin:0;padding:0}.reset-link{text-decoration:none}.reset-link:hover{cursor:pointer}section:not(last-child){border-bottom:1px solid #d6d6d6;padding:20px 0}.after-dot:after{content:".";color:#33f}p{font-size:16;font-size:1rem;font-family:Roboto,sans-serif;line-height:1.4;color:rgba(37,37,37,.8);margin:0}@media screen and (min-width:992px){.description{width:50%;padding-right:40px;position:relative;z-index:-5}}.basic-img{display:none}@media screen and (min-width:992px){.basic-img{display:block;position:absolute;bottom:0;left:0;z-index:-5}}.decription__content{margin-bottom:20px}.header{width:100%;padding:15px 0;position:fixed;top:0;border-bottom:1px solid #d6d6d6;background:#fff}@media screen and (min-width:992px){.header{padding:20px 0}}.container--header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.logo,.logo-edition{font-size:18;font-size:1.125rem;font-family:Lato,sans-serif;font-weight:900;color:#000;line-height:1.5}.logo-edition{color:#33f}.nav__item:hover .nav__link{color:#33f}.nav{width:100%;height:100vh;overflow-y:auto;position:fixed;top:0;left:0;background:#33f;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-transform:translateY(-100%);transform:translateY(-100%);-webkit-transition:-webkit-transform .2s linear;transition:transform .2s linear;transition:transform .2s linear,-webkit-transform .2s linear}.nav.active{-webkit-transform:translateY(0);transform:translateY(0)}@media screen and (min-width:992px){.nav{-webkit-transform:translateY(0);transform:translateY(0);background:0 0;height:auto;position:static}}.nav__list{margin:0;padding:0;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media screen and (min-width:992px){.nav__list{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;width:auto}}.nav__item:not(:last-child){padding-bottom:30px}@media screen and (min-width:992px){.nav__item:not(:last-child){padding:0 10px}.nav__item{position:relative}.nav__item::after,.nav__item::before{display:block;position:absolute;content:"";height:.5px;width:0;background-color:#33f;bottom:0;left:50%;-webkit-transition:width .3s ease-in-out;transition:width .3s ease-in-out}.nav__item::after{-webkit-transition:width .3s ease-in-out,left .3s ease-in-out;transition:width .3s ease-in-out,left .3s ease-in-out}.nav__item:hover::after,.nav__item:hover::before{width:50%}.nav__item:hover::after{left:0}}.nav__link{font-size:14;font-size:.875rem;font-family:Lato;font-weight:700;color:#fff;text-transform:uppercase;line-height:1.5}@media screen and (min-width:992px){.nav__link{color:#000;position:relative}}.nav-btn{width:22px;height:22px;font-size:18;font-size:1.125rem;background:#fff;border-radius:50%;-webkit-box-shadow:0 0 25px rgba(219,219,219,.5);box-shadow:0 0 25px rgba(219,219,219,.5);border:0;cursor:pointer;padding:0;position:absolute;top:15px;right:15px;z-index:99;-webkit-transition:color .2s linear;transition:color .2s linear}.nav-btn:hover{color:#33f}@media screen and (min-width:768px){.nav-btn{right:65px}}@media screen and (min-width:992px){.nav-btn{display:none}}.scroll{-webkit-box-shadow:0 0 10px rgba(0,0,0,.5);box-shadow:0 0 10px rgba(0,0,0,.5)}@media screen and (min-width:992px){.container--about{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}}.about{margin-top:100px;padding-top:0}@media screen and (min-width:992px){.img-wrapper{width:50%}}.about__img{width:100%;margin-bottom:20px}@media screen and (min-width:992px){.about__wrapper{width:50%;padding-right:30px}}.about__title{font-size:30;font-size:1.875rem;font-family:Lato,sans-serif;line-height:1.4}.about__description,.about__title{margin:0 0 20px}@media screen and (min-width:1200px){.about__description{margin:0 0 30px}}.about__contacts>p{margin:0 0 10px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;line-height:1.6}.about__contacts>p span:first-child{font-size:13;font-size:.8125rem;text-transform:uppercase;color:#000;font-family:Lato,sans-serif;font-weight:700;float:left;display:block}.about__link{font-size:13;font-size:.8125rem;padding-left:90px;display:block;color:rgba(37,37,37,.8);font-family:Roboto,sans-serif}.about__link--social{display:inline;padding:0 10px 0 0}@media screen and (min-width:992px){.about__link--social{padding:0 30px 0 0}}.about__btn{width:100%;font-size:12;font-size:.75rem;font-family:Lato,sans-serif;font-weight:700;color:#fff;text-transform:uppercase;background:#33f;padding:15px;border:0}.about__btn:hover{cursor:pointer;-webkit-box-shadow:5px 5px 20px 0 #33f;box-shadow:5px 5px 20px 0 #33f}@media screen and (min-width:992px){.about__btn{width:35%;margin-top:10px}}@media screen and (min-width:1200px){.about__btn{margin-top:20px}}.fab{color:rgba(37,37,37,.8)}.fab:hover{color:#33f;-webkit-transition:all .3s ease;transition:all .3s ease}@media screen and (min-width:992px){.container--skills{display:-webkit-box;display:-ms-flexbox;display:flex}.skills__list{width:50%}}.skills__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.education__item:not(:last-child),.skills__item:not(:last-child){padding-bottom:10px}.item__title{padding:0 0 10px}.education__item p:not(:last-child),.skills__item p:not(:last-child){margin:0 0 5px}.skills__item p:before{content:"\f00c";color:#33f;font-weight:900;font-family:"Font Awesome 5 Free";-webkit-font-smoothing:antialiased;padding-right:10px}@media screen and (min-width:992px){.container--education{display:-webkit-box;display:-ms-flexbox;display:flex}.education__list{width:50%}}.education__item,.item__title-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.education__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.item__title-wrapper{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;padding-bottom:10px}.item__subtitle,.item__title{font-family:Lato,sans-serif;font-weight:700}.item__title{line-height:1.5;float:left;margin:0;font-size:18;font-size:1.125rem}.item__subtitle{font-size:16;font-size:1rem;color:rgba(37,37,37,.8);padding-left:20px;font-style:italic}.education__item p{display:block}.container--portfolio{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.description--portfolio{width:100%;padding:0}.portfolio__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media screen and (min-width:576px){.portfolio__list{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:distribute;justify-content:space-around;margin:auto}}@media screen and (min-width:992px){.portfolio__list{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}}.portfolio__item{max-width:300px}.portfolio__item:not(:last-child){padding-bottom:20px}@media screen and (min-width:576px){.portfolio__item:not(:last-child){margin:0 20px 0 0;padding-bottom:0}}.portfolio__link{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.portfolio__img{width:100%}@media screen and (min-width:768px){.portfolio__img{height:200px}}.img-data,.img-description{font-size:16;font-size:1rem;font-family:Roboto,sans-serif;line-height:1.4;color:rgba(37,37,37,.8)}.img-description{font-weight:700;color:#000}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
